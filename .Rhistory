install.packages("GGIR", dependencies = TRUE)
library(GGIR)
g.shell.GGIR(#=======================================
# INPUT NEEDED:
mode=c(1,2,3,4,5),
datadir="C:/mystudy/mydata",
outputdir="D:/myresults",
f0=1, f1=2,
#-------------------------------
# Part 1:
#-------------------------------
# Key functions: reading file, auto-calibration, and extracting features
do.enmo = TRUE,             do.anglez=TRUE,
chunksize=1,                printsummary=TRUE,
#-------------------------------
# Part 2:
#-------------------------------
strategy = 2,               ndayswindow=7,
hrs.del.start = 0,          hrs.del.end = 0,
maxdur = 9,                 includedaycrit = 16,
winhr = c(5,10),
qlevels = c(c(1380/1440),c(1410/1440)),
qwindow=c(0,24),
ilevels = c(seq(0,400,by=50),8000),
mvpathreshold =c(100,120),
bout.metric = 4,
closedbout=FALSE,
#-------------------------------
# Part 3:
#-------------------------------
# Key functions: Sleep detection
timethreshold= c(5),        anglethreshold=5,
ignorenonwear = TRUE,
#-------------------------------
# Part 4:
#-------------------------------
# Key functions: Integrating sleep log (if available) with sleep detection
# storing day and person specific summaries of sleep
excludefirstlast = TRUE,
includenightcrit = 16,
def.noc.sleep = c(),
loglocation= "C:/mydata/sleeplog.csv",
outliers.only = TRUE,
criterror = 4,
relyonsleeplog = FALSE,
sleeplogidnum = TRUE,
colid=1,
coln1=2,
do.visual = TRUE,
nnights = 9,
#-------------------------------
# Part 5:
# Key functions: Merging physical activity with sleep analyses
#-------------------------------
threshold.lig = c(30), threshold.mod = c(100),  threshold.vig = c(400),
boutcriter = 0.8,      boutcriter.in = 0.9,     boutcriter.lig = 0.8,
boutcriter.mvpa = 0.8, boutdur.in = c(1,10,30), boutdur.lig = c(1,10),
boutdur.mvpa = c(1),   timewindow = c("WW"),
#-----------------------------------
# Report generation
#-------------------------------
# Key functions: Generating reports based on meta-data
do.report=c(2,4,5),
visualreport=TRUE,     dofirstpage = TRUE,
viewingwindow=1)
setwd("~H:/My Documents/Desktop/RCourse")
> tuna <- read.csv("health-data-Default.csv", TRUE, ",")
> appleWatch <- read.csv("health-data-Default.csv", TRUE, ",")
library(knitr)
install.packages("knitr")
library(knitr)
setwd("H:/My Documents/Desktop/Course")
applewatch <- read.csv("health-data-Default.csv")
setwd("H:/My Documents/Desktop/RCourse")
applewatch <- read.csv("health-data-Default.csv")
applewatch <- read.csv("health-data-Default.csv")
View(applewatch)
library(haven)
install.packages("haven")
library(haven)
applewatch_HR <- read.csv("health-data-Default.csv")
library(readxl)
library(readxl)
applewatch_xl <- read_excel("health-data-Default.xlsx", col_types = c("numeric", "text", "text", "numeric", "numeric"))
applewatch_xl <- read_excel("health-data-Default.csv", col_types = c("numeric", "text", "text", "numeric", "numeric"))
applewatch_HR <- read.csv("health-data-Default.csv")
summary(applewatch)
summary(applewatch$DateTime)
summary(applewatch$Heart)
summary(applewatch$Calories)
summary(applewatch$Steps)
summary(applewatch$Distance)
library(ggplot2)
library(ggplot2)
scatter<- ggplot(applewatch, aes(x = DateTime, y = Heart)) + geom_point() +
xlab("Date and Time")+
ylab("Heart rate")
plot(scatter)
library(knitr)
# Set working directory
setwd("C:\Thesis")
# Set working directory
setwd("C:/Thesis")
applewatch <- read.csv("health-data-Default.csv")
# Read Health Data Collector App data
library(haven)
applewatch <- read.csv("health-data-Default.csv")
# Summary of statistical descriptives of each variable
summary(applewatch)
summary(applewatch$DateTime)
summary(applewatch$Heart)
summary(applewatch$Calories)
summary(applewatch$Steps)
summary(applewatch$Distance)
#Scatterplot of Heart rate vs. Time
library(ggplot2)
scatter<- ggplot(applewatch, aes(x = DateTime, y = Heart)) +
geom_point() +
xlab("Date and Time")+
ylab("Heart rate")
plot(scatter)
#Scatterplot of Calories vs. Time
library(ggplot2)
scatter<- ggplot(applewatch, aes(x = DateTime, y = Calories)) +
geom_point() +
xlab("Date and Time")+
ylab("Calories")
plot(scatter)
#Scatterplot of Steps vs. Time
library(ggplot2)
scatter<- ggplot(applewatch, aes(x = DateTime, y = Steps)) +
geom_point() +
xlab("Date and Time")+
ylab("Steps")
plot(scatter)
#Scatterplot of Distance vs. Time
library(ggplot2)
scatter<- ggplot(applewatch, aes(x = DateTime, y = Distance)) +
geom_point() +
xlab("Date and Time")+
ylab("Distance")
plot(scatter)
#Scatterplot of Distance vs. Time with color
library(ggplot2)
scatter<- ggplot(applewatch, aes(x = Heart, y = Distance)) +
geom_point(aes(colour = factor(DateTime)), alpha = 1/5) +
xlab("Date and Time")+
ylab("Distance")
plot(scatter_cat)
# Created by Bo Simango
# M.Sc. candidate
# Supervisor: Dr. Daniel Fuller
# Memorial University of Newfoundland
# Data source: Health Data Collector App - AW data
# Output: ggplot/scatter plot
# First install knitr library
# Knitr allows you to manipulate data
library(knitr)
# Set working directory
setwd("C:/Thesis")
applewatch <- read.csv("health-data-Default.csv")
# Read Health Data Collector App data
library(haven)
applewatch <- read.csv("health-data-Default.csv")
# Summary of statistical descriptives of each variable
summary(applewatch)
summary(applewatch$DateTime)
summary(applewatch$Heart)
summary(applewatch$Calories)
summary(applewatch$Steps)
summary(applewatch$Distance)
#Scatterplot of Heart rate vs. Time
library(ggplot2)scatter<- ggplot(applewatch, aes(x = DateTime, y = Heart)) +
geom_point() +
xlab("Date and Time")+
ylab("Heart rate")
plot(scatter)
#Scatterplot of Calories vs. Time
library(ggplot2)
scatter<- ggplot(applewatch, aes(x = DateTime, y = Calories)) +
geom_point() +
xlab("Date and Time")+
ylab("Calories")
plot(scatter)
#Scatterplot of Steps vs. Time
library(ggplot2)
scatter<- ggplot(applewatch, aes(x = DateTime, y = Steps)) +
geom_point() +
xlab("Date and Time")+
ylab("Steps")
plot(scatter)
#Scatterplot of Distance vs. Time
library(ggplot2)
scatter<- ggplot(applewatch, aes(x = DateTime, y = Distance)) +
geom_point() +
xlab("Date and Time")+
ylab("Distance")
plot(scatter)
library(knitr)
# Set working directory
setwd("C:/Thesis")
applewatch <- read.csv("health-data-Default.csv")
# Read Health Data Collector App data
library(haven)
applewatch <- read.csv("health-data-Default.csv")
# Summary of statistical descriptives of each variable
summary(applewatch)
summary(applewatch$DateTime)
summary(applewatch$Heart)
summary(applewatch$Calories)
summary(applewatch$Steps)
summary(applewatch$Distance)
#Scatterplot of Heart rate vs. Time
library(ggplot2)scatter<- ggplot(applewatch, aes(x = DateTime, y = Heart)) +
geom_point() +
xlab("Date and Time")+
ylab("Heart rate")
plot(scatter)
#Scatterplot of Calories vs. Time
library(ggplot2)
scatter<- ggplot(applewatch, aes(x = DateTime, y = Calories)) +
geom_point() +
xlab("Date and Time")+
ylab("Calories")
plot(scatter)
#Scatterplot of Steps vs. Time
library(ggplot2)
scatter<- ggplot(applewatch, aes(x = DateTime, y = Steps)) +
geom_point() +
xlab("Date and Time")+
ylab("Steps")
plot(scatter)
#Scatterplot of Distance vs. Time
library(ggplot2)
scatter<- ggplot(applewatch, aes(x = DateTime, y = Distance)) +
geom_point() +
xlab("Date and Time")+
ylab("Distance")
plot(scatter)
## R Markdown
This is an R Markdown document. Markdown is a simple formatting syntax for authoring HTML, PDF, and MS Word documents. For more details on using R Markdown see <http://rmarkdown.rstudio.com>.
When you click the **Knit** button a document will be generated that includes both content as well as the output of any embedded R code chunks within the document. You can embed an R code chunk like this:
## Including Plots
You can also embed plots, for example:
Note that the `echo = FALSE` parameter was added to the code chunk to prevent printing of the R code that generated the plot.
# Created by Bo Simango
# M.Sc. candidate
# Supervisor: Dr. Daniel Fuller
# Memorial University of Newfoundland
# Data source: Health Data Collector App - AW data
# Output: ggplot/scatter plot
# First install knitr library
# Knitr allows you to manipulate data
library(knitr)
# Set working directory
setwd("C:/Thesis")
applewatch <- read.csv("health-data-Default.csv")
# Read Health Data Collector App data
library(haven)
applewatch <- read.csv("health-data-Default.csv")
# Summary of statistical descriptives of each variable
summary(applewatch)
summary(applewatch$DateTime)
summary(applewatch$Heart)
summary(applewatch$Calories)
summary(applewatch$Steps)
summary(applewatch$Distance)
#Scatterplot of Heart rate vs. Time
library(ggplot2)scatter<- ggplot(applewatch, aes(x = DateTime, y = Heart)) +
geom_point() +
xlab("Date and Time")+
ylab("Heart rate")
plot(scatter)
## R Markdown
This is an R Markdown document. Markdown is a simple formatting syntax for authoring HTML, PDF, and MS Word documents. For more details on using R Markdown see <http://rmarkdown.rstudio.com>.
When you click the **Knit** button a document will be generated that includes both content as well as the output of any embedded R code chunks within the document. You can embed an R code chunk like this:
## Including Plots
library(knitr)
# Set working directory
setwd("C:/Thesis")
applewatch <- read.csv("health-data-Default.csv")
# Read Health Data Collector App data
library(haven)
applewatch <- read.csv("health-data-Default.csv")
# Summary of statistical descriptives of each variable
summary(applewatch)
library(knitr)
# Set working directory
setwd("C:/Thesis")
applewatch <- read.csv("health-data-Default.csv")
# Read Health Data Collector App data
library(haven)
applewatch <- read.csv("health-data-Default.csv")
# Summary of statistical descriptives of each variable
summary(applewatch)
summary(applewatch$DateTime)
summary(applewatch$Heart)
summary(applewatch$Calories)
summary(applewatch$Steps)
summary(applewatch$Distance)
#Scatterplot of Heart rate vs. Time
library(ggplot2)scatter<- ggplot(applewatch, aes(x = DateTime, y = Heart)) +
geom_point() +
xlab("Date and Time")+
ylab("Heart rate")
plot(scatter)
